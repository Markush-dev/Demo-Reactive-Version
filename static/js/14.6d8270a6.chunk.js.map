{"version":3,"sources":["pages/SliderTest-page.tsx"],"names":["SliderTest","dataUri","a","console","log","downloadImage","fetch","image","blob","imageBlog","imageURL","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","onTakePhoto","handleTakePhoto"],"mappings":"gRA+CeA,UA5BI,WAAM,4CAEvB,WAAgCC,GAAhC,SAAAC,EAAA,6DAEEC,QAAQC,IAAIH,GAFd,SAIQI,EAAcJ,GAJtB,4CAFuB,+BASRI,EATQ,8EASvB,WAA6BJ,GAA7B,qBAAAC,EAAA,sEACsBI,MAAML,GAD5B,cACQM,EADR,gBAE0BA,EAAMC,OAFhC,OAEQC,EAFR,OAGQC,EAAWC,IAAIC,gBAAgBH,IAE/BI,EAAOC,SAASC,cAAc,MAC/BC,KAAON,EACZG,EAAKI,SAAW,oBAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,GAV5B,6CATuB,sBAqBvB,OACE,cAAC,IAAD,CACES,YAAgB,SAACrB,IAvBG,SAAD,2BAuBYsB,CAAgBtB","file":"static/js/14.6d8270a6.chunk.js","sourcesContent":["// @ts-nocheck\r\nimport React, { useRef } from \"react\";\r\nimport styles from \"../../src/styles/index.scss\";\r\nimport { createRef, useState, useCallback,useEffect } from \"react\";\r\nimport { Image as KonvaImage, Layer, Stage } from \"react-konva\";\r\nimport useImage from \"use-image\";\r\nimport { IndividualSticker } from \"../components/IndividualSticker/individualSticker\";\r\nimport { backgroundData } from \"./pageData/background.data\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Camera from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\n\r\n// Background Removal\r\nimport \"@tensorflow/tfjs-core\";\r\nimport \"@tensorflow/tfjs-converter\";\r\nimport \"@tensorflow/tfjs-backend-webgl\"; \r\nimport { SlickSliderBackground } from \"../components/Containers/BackgroundContainer/SlickSliderBackground\";\r\n\r\nconst SliderTest = () => {\r\n\r\n  async function handleTakePhoto (dataUri) {\r\n    // Do stuff with the photo...\r\n    console.log(dataUri);\r\n\r\n    await downloadImage(dataUri);\r\n    \r\n  }\r\n  async function downloadImage(dataUri) {\r\n    const image = await fetch(dataUri);\r\n    const imageBlog = await image.blob();\r\n    const imageURL = URL.createObjectURL(imageBlog); //convert object url\r\n \r\n    const link = document.createElement(\"a\");\r\n    link.href = imageURL;\r\n    link.download = \"Augmented Picture\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n  return (\r\n    <Camera\r\n      onTakePhoto = { (dataUri) => { handleTakePhoto(dataUri); } }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SliderTest;\r\n"],"sourceRoot":""}